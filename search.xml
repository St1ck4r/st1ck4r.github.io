<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      
        <title>[玄机应急响应]: 应急响应-Linux日志分析</title>
      
      <link href="/posts/78e290/"/>
      <url>/posts/78e290/</url>
      
        <content type="html"><![CDATA[<p><img src="%E7%8E%84%E6%9C%BA%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-Linux%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90.assets/image-20240918030842920.png" alt="image-20240918030842920"></p><p>题目简介</p><p><img src="%E7%8E%84%E6%9C%BA%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-Linux%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90.assets/image-20240918030853864.png" alt="image-20240918030853864"></p><p>1.有多少IP在爆破主机ssh的root帐号，如果有多个使用&quot;,&quot;分割</p><p>2.ssh爆破成功登陆的IP是多少，如果有多个使用&quot;,&quot;分割</p><p>3.爆破用户名字典是什么？如果有多个使用&quot;,&quot;分割</p><p>4.登陆成功的IP共爆破了多少次</p><p>5.黑客登陆主机后新建了一个后门用户，用户名是多少</p>]]></content>
      
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
            <tag> 靶场 </tag>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>[玄机应急响应]: 应急响应-webshell查杀</title>
      
      <link href="/posts/1a3bceb/"/>
      <url>/posts/1a3bceb/</url>
      
        <content type="html"><![CDATA[<p><img src="%E7%8E%84%E6%9C%BA%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-webshell%E6%9F%A5%E6%9D%80.assets/image-20240917023315828.png" alt="image-20240917023315828"></p><h2 id="题目简介">题目简介</h2><p><img src="%E7%8E%84%E6%9C%BA%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-webshell%E6%9F%A5%E6%9D%80.assets/image-20240917041158484.png" alt="image-20240917041158484"></p><p>进来不管三七二十一先把源码dump出来慢慢分析。</p><p><img src="%E7%8E%84%E6%9C%BA%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-webshell%E6%9F%A5%E6%9D%80.assets/image-20240917031358706.png" alt="image-20240917031358706"></p><h2 id="1-黑客webshell里面的flag">1. 黑客webshell里面的flag</h2><p>D盾查杀一波。</p><p><img src="%E7%8E%84%E6%9C%BA%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-webshell%E6%9F%A5%E6%9D%80.assets/image-20240917033050455.png" alt="image-20240917033050455"></p><p>挨个查看，在翻到<strong>gz.php</strong>时在注释中找到第一个flag。</p><p><img src="%E7%8E%84%E6%9C%BA%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-webshell%E6%9F%A5%E6%9D%80.assets/image-20240917033257268.png" alt="image-20240917033257268"></p><p><strong>FLAG1：flag{027ccd04-5065-48b6-a32d-77c704a5e26d}</strong></p><h2 id="2-黑客使用的什么工具的shell-github地址的md5">2. 黑客使用的什么工具的shell github地址的md5</h2><p>直接复制gz.php内容Bing一波。</p><p><img src="%E7%8E%84%E6%9C%BA%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-webshell%E6%9F%A5%E6%9D%80.assets/image-20240917033938757.png" alt="image-20240917033938757"></p><p>直接github搜哥斯拉，获得仓库地址然后md5加密一下即可获得第二个flag。</p><p><img src="%E7%8E%84%E6%9C%BA%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-webshell%E6%9F%A5%E6%9D%80.assets/image-20240917034224570.png" alt="image-20240917034224570"></p><p>哥斯拉仓库地址：<a href="https://github.com/BeichenDream/Godzilla">https://github.com/BeichenDream/Godzilla</a></p><p><strong>FLAG2：flag{39392de3218c333f794befef07ac9257}</strong></p><h2 id="3-黑客隐藏shell的完整路径的md5">3. 黑客隐藏shell的完整路径的md5</h2><p>根据前面的D盾扫描结果，结合题目需要隐藏的shell，所以这里提交**.Mysqli.php**完整路径的md5值。(因为文件前带个点，直接ls是看不到的，需要ll才能看到)。</p><p><img src="%E7%8E%84%E6%9C%BA%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-webshell%E6%9F%A5%E6%9D%80.assets/image-20240917034943216.png" alt="image-20240917034943216"></p><p>.Mysqli.php在服务器上的完整路径：/var/www/html/include/Db/.Mysqli.php</p><p><strong>FLAG3：flag{aebac0e58cd6c5fad1695ee4d1ac1919}</strong></p><h2 id="4-黑客免杀马完整路径-md5">4. 黑客免杀马完整路径 md5</h2><p>分析日志文件，看到两条可疑记录。</p><p><img src="%E7%8E%84%E6%9C%BA%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-webshell%E6%9F%A5%E6%9D%80.assets/image-20240917040347478.png" alt="image-20240917040347478"></p><p>找到top.php完整路径md5加密即可获得flag。</p><p>也可取巧直接把D盾扫出来的文件挨个提交一遍(免杀马有时效性，能活一年的不多，所以现在一般是能扫出来的)。</p><p>top.php在服务器上的完整路径：/var/www/html/wap/top.php</p><p><strong>FLAG4：flag{eeff2eabfd9b7a6d26fc1a53d3f7d1de}</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
            <tag> 靶场 </tag>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>小迪安全学习笔记</title>
      
      <link href="/posts/e24682eb/"/>
      <url>/posts/e24682eb/</url>
      
        <content type="html"><![CDATA[<p>Day1操作系统_名词_文件下载_反弹shell</p><p>POC：全称 ’ Proof of Concept '，中文 ’ 概念验证 ’ ，常指一段漏洞证明的代码。</p><p>EXP：全称 ’ Exploit '，中文 ’ 利用 '，指利用系统漏洞进行攻击的动作。</p><p>Payload：中文 ’ 有效载荷 '，指成功exploit之后，真正在目标系统执行的代码或指令。</p><p>Shellcode：简单翻译 ’ shell代码 '，是Payload的一种，由于其建立正向/反向shell而得名。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 信息安全 </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>[青少年CTF]Misc--WriteUp</title>
      
      <link href="/posts/e70c7844/"/>
      <url>/posts/e70c7844/</url>
      
        <content type="html"><![CDATA[<p>按难度从低(⭐)到高(⭐⭐⭐⭐⭐)排序。</p><p>0x01 Bear(⭐)</p><p>考点：与熊论道</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902011529061.png" alt="image-20240902011529061"></p><p>熊曰解密。解密网站：<a href="http://hi.pcmoe.net/index.html">http://hi.pcmoe.net/index.html</a></p><p>0x02 表情包(⭐)</p><p>考点：文件属性</p><p>解压附件得到一堆小fu狸表情包，挨个查看文件属性详细信息，即可获得flag。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902011329728.png" alt="image-20240902011329728"></p><p>0x03 回复就能换FLAG(⭐)</p><p>考点：无</p><p>访问青少年CTF论坛回复置顶帖子即可获得flag。</p><p>0x04 神奇的压缩包(⭐)</p><p>考点：zip压缩包伪加密(?)</p><p>看题目描述像是伪加密，但是附件是一个正常的压缩包(?)，可能是附件上传错了，直接解压即可获得flag。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902013449487.png" alt="image-20240902013449487"></p><p>0x05 Whale(⭐)</p><p>考点：无</p><p>cmd运行whale.exe即可获得flag。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902013746858.png" alt="image-20240902013746858"></p><p>0x06 小光的答案之书(⭐)</p><p>考点：</p><p>0x07 签到(⭐)</p><p>考点：无</p><p>解压附件得到一张图片，在右上角有一个二维码，拿手机扫描到公众号回复指定内容即可获得flag。(注意！这张图片QR Research或者草料二维码网站是扫不出内容的，需要拿stegsolve处理成单张二维码。)</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902020815124.png" alt="image-20240902020815124"></p><p>0x08 大魔王说需要听一下贝斯(⭐)</p><p>考点：Base64</p><p>打开附件提示base64，随便找个网站(<a href="https://base64.us/">https://base64.us/</a>)解密即可获得flag。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902021403488.png" alt="image-20240902021403488"></p><p>0x09 时间的秘密(⭐)</p><p>考点：时间戳转换</p><p>在线时间戳转换(<a href="https://www.beijing-time.org/shijianchuo/">https://www.beijing-time.org/shijianchuo/</a>)。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902021908454.png" alt="image-20240902021908454"></p><p>0x10 是我的Hanser!(⭐⭐)</p><p>考点：零宽隐写</p><p>解压附件获得一个加密的zip文件和txt文档，将txt文档里的内容复制到零宽解密网站(<a href="https://yuanfux.github.io/zero-width-web/">https://yuanfux.github.io/zero-width-web/</a>)解密获得zip文件密码。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902024257005.png" alt="image-20240902024257005"></p><p>解压获得psd文件，打开后隐藏图层2即可获得flag。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902024523075.png" alt="image-20240902024523075"></p><p>Tips：零宽隐写判断小技巧(用鼠标移动光标的同时观察列数变化，列数突然增大即为零宽隐写；在字数少的情况下，观察列数是否符合常理也可以判断是否为零宽隐写。)</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902025145719.png" alt="image-20240902025145719"></p><p>0x11 上号(⭐⭐)</p><p>考点：流量包分析，steghide图片隐写</p><p>解压附件后得到一个流量包，打开并导出shanghao.zip。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902025458916.png" alt="image-20240902025458916"></p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902025524437.png" alt="image-20240902025524437"></p><p>解压shanghao.zip，得到一张图片，用010Editor查看图片，在文件末尾发现qsnctf。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902031222022.png" alt="image-20240902031222022"></p><p>将上文获得的qsnctf作为密码，尝试使用steghide提取图片文件隐藏信息。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902031353728.png" alt="image-20240902031353728"></p><p>打开flag.txt获得flag。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902031454565.png" alt="image-20240902031454565"></p><p>0x12 仓鼠的窝(⭐⭐)</p><p>考点：拼图</p><p>出题人不当人，把图片裁了五千多张，本想用montage + gaps解决的，结果电脑跑崩三次，无奈只能采取肉眼拼图大法，反复观察数次后，终于拼出几个单词。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902205756010.png" alt="image-20240902205756010"></p><p>结果提交flag还是个错的，最后只好去观摩<a href="https://blog.csdn.net/xiaoyia_/article/details/136107030?ops_request_misc=%257B%2522request%255Fid%2522%253A%252287CB8668-E086-4EB2-A4D9-CCFDAB1C96EF%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=87CB8668-E086-4EB2-A4D9-CCFDAB1C96EF&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~blog~sobaiduend~default-2-136107030-null-null.nonecase&amp;utm_term=%E4%BB%93%E9%BC%A0%E7%9A%84%E7%AA%9D&amp;spm=1018.2226.3001.4450">大佬的wp</a>，发现后面还要加三个&quot;!&quot;…</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902210817638.png" alt="image-20240902210817638"></p><p>本着不浪费大家时间的原则，这里直接给出最后的flag：flag{Hamsters_are_so_cute!!!}</p><p>0x13 我们的秘密(⭐⭐)</p><p>考点：域名解析</p><p>随便找个在线域名解析网站(<a href="http://www.jsons.cn/nslookup/">http://www.jsons.cn/nslookup/</a>)解析一下即可获得flag。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902221613460.png" alt="image-20240902221613460"></p><p>0x14 多情(⭐⭐)</p><p>考点：图片分离，png图片CRC爆破，进制转换，unicode编码转ASCII</p><p>下载解压附件得到一个zip文件和一张png图片，用010Editor打开图片，发现另一张图片。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902232516711.png" alt="image-20240902232516711"></p><p>用binwalk或者foremost分离(也可以直接复制16进制文本再粘贴到一个新文件中)。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902234037251.png" alt="image-20240902234037251"></p><p>使用crc宽高爆破脚本得出正确的宽高值(或者直接把高改个大点的值，只对特定题目有效)。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902234354871.png" alt="image-20240902234354871"></p><p>改为正确的宽高值后再次打开图片，得到一个数：996</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902234610742.png" alt="image-20240902234610742"></p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902234626063.png" alt="image-20240902234626063"></p><p>解压刚开始得到的zip文件得到10个txt文件，内容为unicode编码过的字符。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902234908903.png" alt="image-20240902234908903"></p><p>将996转换成二进制数得1111100100。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902235406522.png" alt="image-20240902235406522"></p><p>刚好10个数对应txt文件上的数字，将txt文件按1111100100的顺序进行拼接再进行解码即可得到flag(&quot;第一个1.txt&quot;对应的就是二进制数中第一个1，以此类推)。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240902235521182.png" alt="image-20240902235521182"></p><p>0x15 简简单单的题目(⭐⭐⭐)</p><p>考点：二维码，jpg图片隐写，AES加密，盲水印隐写，LSB隐写，中文电码，盲文加密，RGB转图片</p><p>解压附件获得四个文件。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240903001206978.png" alt="image-20240903001206978"></p><p>打开hint.txt获得提示。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240903001324029.png" alt="image-20240903001324029"></p><p>解压key1.zip需要输入密码，将hint中的qsnctf作为密码解压。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240903001442644.png" alt="image-20240903001442644"></p><p>扫描key.png，发现无法识别，将其与能正常识别得二维码对比，发现颜色相反，遂将key.png进行反色处理(<a href="https://remeins.com/index/app/fx">https://remeins.com/index/app/fx</a>)。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240903002003907.png" alt="image-20240903002003907"></p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240903002045286.png" alt="image-20240903002045286"></p><p>三个角缺少小黑块，将其补充完整。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240903003021253.png" alt="image-20240903003021253"></p><p>再次扫描，获得字符串：Zz123!@#qsn</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240903003048610.png" alt="image-20240903003048610"></p><p>用010Editor打开key1.jpg将图片高度调高。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240903003540421.png" alt="image-20240903003540421"></p><p>保存后再次打开图片获得 key：我沉醉了。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240903003633381.png" alt="image-20240903003633381"></p><p>回到010Editor，翻到文件结尾发现加密字符串。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240903003843769.png" alt="image-20240903003843769"></p><p>观察其开头为U2Fsd，根据经验猜测为AES加密，密钥为前文得到的key值。寻找在线网站(<a href="https://www.sojson.com/encrypt_aes.html">https://www.sojson.com/encrypt_aes.html</a>)进行解密。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240903004257185.png" alt="image-20240903004257185"></p><p>结合前文扫描二维码得到的字符串，获得fla2_key.zip的解压密码：QSNZz123!@#qsn。</p><p>解压fla2_key.zip，得到一张图片。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240903011911716.png" alt="image-20240903011911716"></p><p>前文的hint中最后一行提示为傅里叶，所以这里猜测为盲水印隐写。</p><p>使用WaterMark工具提取盲水印，获得字符串：qsnctfNB666。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240903012110531.png" alt="image-20240903012110531"></p><p>将刚得到的字符串作为密码，使用lsb隐写脚本cloacked-pixel进行解密。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240903012943766.png" alt="image-20240903012943766"></p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240903013013634.png" alt="image-20240903013013634"></p><p>将得到的数字进行中文电码查询(<a href="http://code.mcdvisa.com/">http://code.mcdvisa.com/</a>)，获得flag.zip的解压密码。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240903013218931.png" alt="image-20240903013218931"></p><p>解压后打开key.txt，一眼顶针，盲文加密(<a href="https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=mangwen">https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=mangwen</a>)。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240903013434228.png" alt="image-20240903013434228"></p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240903013545907.png" alt="image-20240903013545907"></p><p>将qsnCTF9999作为密码，使用free_file_Camouflage工具进行解密。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240903015942569.png" alt="image-20240903015942569"></p><p>得到2.txt，将其中的{}去除。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240903021045916.png" alt="image-20240903021045916"></p><p>将rgb值转换成图片即可获得flag。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240903022644509.png" alt="image-20240903022644509"></p><p>转换脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">x = <span class="number">753</span> <span class="comment"># 宽 </span></span><br><span class="line">y = <span class="number">754</span> <span class="comment"># 高</span></span><br><span class="line"><span class="comment"># 对txt里的行数进行整数分解</span></span><br><span class="line"></span><br><span class="line">im = Image.new(<span class="string">&quot;RGB&quot;</span>,(x,y)) <span class="comment">#创建图片</span></span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&#x27;2.txt&#x27;</span>)     <span class="comment">#打开rbg值文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#通过一个个rgb点生成图片</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,x):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,y):</span><br><span class="line">        line = file.readline()<span class="comment">#获取一行</span></span><br><span class="line">        rgb = line.split(<span class="string">&quot; &quot;</span>)<span class="comment">#根据空格分离rgb</span></span><br><span class="line">        im.putpixel((i,j),(<span class="built_in">int</span>(rgb[<span class="number">0</span>]),<span class="built_in">int</span>(rgb[<span class="number">1</span>]),<span class="built_in">int</span>(rgb[<span class="number">2</span>])))<span class="comment">#rgb转化为像素</span></span><br><span class="line">im.show()</span><br></pre></td></tr></table></figure><p>0x16 CTFer Revenge</p><p>考点：文本倒序，zip文件密码爆破</p><p>解压附件得到txt文档，打开翻到最后看到zip文件头(逆序)。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240905012318340.png" alt="image-20240905012318340"></p><p>用在线网站(<a href="https://www.67tool.com/text/text-reverse">https://www.67tool.com/text/text-reverse</a>)将内容进行全文逆序。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240905015604905.png" alt="image-20240905015604905"></p><p>用脚本将16进制内容提取出来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">res = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;1.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:  </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> f:</span><br><span class="line">        line = i[<span class="number">10</span>:<span class="number">58</span>]</span><br><span class="line">        res += line</span><br><span class="line">    f.close()</span><br><span class="line"><span class="comment"># print(res)</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;2.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:  </span><br><span class="line">    f.write(res)</span><br><span class="line">    f.close()</span><br></pre></td></tr></table></figure><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240905022147208.png" alt="image-20240905022147208"></p><p>在010Editor中将刚刚得到的16进制粘贴进去，保存后改成.zip后缀。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240905022335226.png" alt="image-20240905022335226"></p><p>打开得到的zip文件，发现需要密码，文件提示小写和数字，直接用ARCHPR进行暴力破解。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240905022945412.png" alt="image-20240905022945412"></p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240905023239322.png" alt="image-20240905023239322"></p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240905023337648.png" alt="image-20240905023337648"></p><p>解压后打开图片，即可得到flag。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240905023455938.png" alt="image-20240905023455938"></p><p>0x17 ez_model</p><p>考点：PyTorch深度学习</p><p>解压附件获得一个pth文件。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240906022350341.png" alt="image-20240906022350341"></p><blockquote><p><strong>pth格式文件简介</strong></p><p>​pth文件是PyTorch中常用的一种文件格式，主要用于保存和加载模型的参数。通过pth文件，我们可以方便地将训练好的模型参数保存下来，并在需要的时候重新加载使用。pth文件不仅包含了模型的权重，还可能包含模型的结构信息，这使得模型的恢复变得非常简单。</p></blockquote><p>由于没有学过深度学习，所以这里百度一个加载模型的脚本(<a href="https://blog.51cto.com/u_16175442/9138272">https://blog.51cto.com/u_16175442/9138272</a>)。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision.models <span class="keyword">as</span> models</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建模型实例</span></span><br><span class="line">model = models.resnet18()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载.pth文件中的参数</span></span><br><span class="line">model.load_state_dict(torch.load(<span class="string">&#x27;easy.pth&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置模型为推理模式</span></span><br><span class="line">model.<span class="built_in">eval</span>()</span><br></pre></td></tr></table></figure><p>运行后报错，简单翻译下貌似缺少键值。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240906022918549.png" alt="image-20240906022918549"></p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240906023043606.png" alt="image-20240906023043606"></p><p>再次百度如何查看键值。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240906023151376.png" alt="image-20240906023151376"></p><p>copy这个脚本简单修改下运行。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240906023409861.png" alt="image-20240906023409861"></p><p>读取这两个键值内容。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240906023514137.png" alt="image-20240906023514137"></p><p>根据经验判断应该是ASCII码，用工具转换一下。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240906024119821.png" alt="image-20240906024119821"></p><p>看样子应该是base64编码的字符串跟用到的字典。</p><p><img src="%E9%9D%92%E5%B0%91%E5%B9%B4CTF-Misc-WriteUp.assets/image-20240906024340489.png" alt="image-20240906024340489"></p><p>拿工具解密即可获得flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 前文中读取key值的脚本</span></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 假设你的.pth文件名为 &#x27;model.pth&#x27;</span></span><br><span class="line">file_path = <span class="string">&#x27;easy.pth&#x27;</span></span><br><span class="line">checkpoint = torch.load(file_path, map_location=<span class="string">&#x27;cpu&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 打印出所有的键</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> checkpoint.keys():</span><br><span class="line">    <span class="built_in">print</span>(key)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 查看特定的键值，例如 &#x27;model_state_dict&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(checkpoint[<span class="string">&#x27;flag&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(checkpoint[<span class="string">&#x27;hint&#x27;</span>])</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 青少年CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> CTF </tag>
            
            <tag> Misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>Hello World</title>
      
      <link href="/posts/4a17b156/"/>
      <url>/posts/4a17b156/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
